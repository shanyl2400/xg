definitions:
  entity.Auth:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  entity.CreateOrderRequest:
    properties:
      intent_subjects:
        items:
          type: string
        type: array
      student_id:
        type: integer
      to_org_id:
        type: integer
    type: object
  entity.CreateOrderSourceRequest:
    properties:
      name:
        type: string
    type: object
  entity.CreateOrgRequest:
    properties:
      address:
        type: string
      name:
        type: string
      parent_id:
        type: integer
      status:
        type: integer
      subjects:
        items:
          type: string
        type: array
      telephone:
        type: string
    type: object
  entity.CreateOrgWithSubOrgsRequest:
    properties:
      org:
        $ref: '#/definitions/entity.CreateOrgRequest'
      sub_orgs:
        items:
          $ref: '#/definitions/entity.CreateOrgRequest'
        type: array
    type: object
  entity.CreateRoleRequest:
    properties:
      auth_ids:
        items:
          type: integer
        type: array
      name:
        type: string
    type: object
  entity.CreateStudentRequest:
    properties:
      address:
        type: string
      email:
        type: string
      gender:
        type: boolean
      intent_subject:
        items:
          type: string
        type: array
      name:
        type: string
      note:
        type: string
      order_source_id:
        type: integer
      telephone:
        type: string
    type: object
  entity.CreateSubjectRequest:
    properties:
      name:
        type: string
      parent_id:
        type: integer
    type: object
  entity.CreateUserRequest:
    properties:
      name:
        type: string
      org_id:
        type: integer
      role_id:
        type: integer
    type: object
  entity.OrderInfoDetails:
    properties:
      id:
        type: integer
      intent_subject:
        items:
          type: string
        type: array
      org_name:
        type: string
      publisher_id:
        type: integer
      publisher_name:
        type: string
      status:
        type: integer
      student_id:
        type: integer
      student_name:
        type: string
      student_telephone:
        type: string
      to_org_id:
        type: integer
    type: object
  entity.OrderInfoList:
    properties:
      orders:
        items:
          $ref: '#/definitions/entity.OrderInfoDetails'
        type: array
      total:
        type: integer
    type: object
  entity.OrderInfoWithRecords:
    properties:
      id:
        type: integer
      intent_subject:
        items:
          type: string
        type: array
      org_name:
        type: string
      paymentInfo:
        items:
          $ref: '#/definitions/entity.OrderPayRecord'
        type: array
      publisher_id:
        type: integer
      publisher_name:
        type: string
      remarkInfo:
        items:
          $ref: '#/definitions/entity.OrderRemarkRecord'
        type: array
      status:
        type: integer
      student_id:
        type: integer
      student_summary:
        $ref: '#/definitions/entity.StudentSummaryInfo'
      to_org_id:
        type: integer
    type: object
  entity.OrderMarkRequest:
    properties:
      content:
        type: string
      order_id:
        type: integer
    type: object
  entity.OrderPayRecord:
    properties:
      amount:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      mode:
        type: integer
      order_id:
        type: integer
      status:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  entity.OrderPayRequest:
    properties:
      amount:
        type: integer
      order_id:
        type: integer
      title:
        type: string
    type: object
  entity.OrderRemarkRecord:
    properties:
      author:
        type: integer
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      mode:
        type: integer
      order_id:
        type: integer
      updated_at:
        type: string
    type: object
  entity.OrderSource:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  entity.Org:
    properties:
      address:
        type: string
      id:
        type: integer
      name:
        type: string
      parent_id:
        type: integer
      status:
        type: integer
      sub_orgs:
        items:
          $ref: '#/definitions/entity.Org'
        type: array
      subjects:
        items:
          type: string
        type: array
      telephone:
        type: string
    type: object
  entity.PayRecordInfo:
    properties:
      amount:
        type: integer
      id:
        type: integer
      intent_subject:
        items:
          type: string
        type: array
      mode:
        type: integer
      order_id:
        type: integer
      org_name:
        type: string
      publisher_id:
        type: integer
      publisher_name:
        type: string
      status:
        type: integer
      student_id:
        type: integer
      student_name:
        type: string
      title:
        type: string
      to_org_id:
        type: integer
    type: object
  entity.PayRecordInfoList:
    properties:
      records:
        items:
          $ref: '#/definitions/entity.PayRecordInfo'
        type: array
      total:
        type: integer
    type: object
  entity.Role:
    properties:
      auth_list:
        items:
          $ref: '#/definitions/entity.Auth'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  entity.StatisticGraph:
    properties:
      performances_graph:
        items:
          $ref: '#/definitions/entity.StatisticRecord'
        type: array
      students_graph:
        items:
          $ref: '#/definitions/entity.StatisticRecord'
        type: array
    type: object
  entity.StatisticRecord:
    properties:
      key:
        type: string
      month:
        type: integer
      value:
        type: integer
      year:
        type: integer
    type: object
  entity.StudentInfo:
    properties:
      address:
        type: string
      authorID:
        type: integer
      authorName:
        type: string
      email:
        type: string
      gender:
        type: boolean
      id:
        type: integer
      intent_subject:
        items:
          type: string
        type: array
      name:
        type: string
      note:
        type: string
      order_source_id:
        type: integer
      order_source_name:
        type: string
      status:
        type: integer
      telephone:
        type: string
    type: object
  entity.StudentInfoList:
    properties:
      students:
        items:
          $ref: '#/definitions/entity.StudentInfo'
        type: array
      total:
        type: integer
    type: object
  entity.StudentInfosWithOrders:
    properties:
      address:
        type: string
      authorID:
        type: integer
      authorName:
        type: string
      email:
        type: string
      gender:
        type: boolean
      id:
        type: integer
      intent_subject:
        items:
          type: string
        type: array
      name:
        type: string
      note:
        type: string
      order_source_id:
        type: integer
      order_source_name:
        type: string
      orders:
        items:
          $ref: '#/definitions/entity.OrderInfoDetails'
        type: array
      status:
        type: integer
      telephone:
        type: string
    type: object
  entity.StudentSummaryInfo:
    properties:
      address:
        type: string
      gender:
        type: boolean
      id:
        type: integer
      name:
        type: string
      note:
        type: string
      telephone:
        type: string
    type: object
  entity.Subject:
    properties:
      id:
        type: integer
      level:
        type: integer
      name:
        type: string
      parent:
        $ref: '#/definitions/entity.Subject'
      parent_id:
        type: integer
    type: object
  entity.SummaryInfo:
    properties:
      orgs_total:
        type: integer
      performance_total:
        type: integer
      students_total:
        type: integer
      success_rate:
        type: integer
    type: object
  entity.UserInfo:
    properties:
      name:
        type: string
      org_id:
        type: integer
      org_name:
        type: string
      role_id:
        type: integer
      role_name:
        type: string
      user_id:
        type: integer
    type: object
  entity.UserLoginRequest:
    properties:
      name:
        type: string
      password:
        type: string
    type: object
  entity.UserLoginResponse:
    properties:
      auths:
        items:
          $ref: '#/definitions/entity.Auth'
        type: array
      org_id:
        type: integer
      org_name:
        type: string
      role_id:
        type: integer
      role_name:
        type: string
      token:
        type: string
      user_id:
        type: integer
    type: object
  entity.UserUpdatePasswordRequest:
    properties:
      new_password:
        type: string
    type: object
  route.IdResponse:
    properties:
      err_msg:
        type: string
      id:
        type: string
    type: object
  route.OrgListResponse:
    properties:
      orgs:
        items:
          $ref: '#/definitions/entity.Org'
        type: array
      total:
        type: integer
    type: object
  route.Response:
    properties:
      err_msg:
        type: string
    type: object
  route.SubjectsResponse:
    properties:
      err_msg:
        type: string
      subjects:
        items:
          type: string
        type: array
    type: object
info:
  contact: {}
  description: xg backend rest api
  termsOfService: https://localhost:8088/v1
  title: xg REST API
  version: 0.1 alpha
paths:
  /api/auth:
    get:
      consumes:
      - application/json
      description: list all authorization
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: listAuth
      tags:
      - auth
  /api/order:
    post:
      consumes:
      - application/json
      description: create an order
      parameters:
      - description: create request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.CreateOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.IdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: createOrder
      tags:
      - order
  /api/order/{id}:
    get:
      consumes:
      - application/json
      description: get order by id
      parameters:
      - description: order id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.OrderInfoWithRecords'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: getOrderByID
      tags:
      - order
  /api/order/{id}/mark:
    post:
      consumes:
      - application/json
      description: add mark to order by id
      parameters:
      - description: order id
        in: path
        name: id
        required: true
        type: string
      - description: create mark
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.OrderMarkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: addOrderMark
      tags:
      - order
  /api/order/{id}/pay:
    put:
      consumes:
      - application/json
      description: pay order by id
      parameters:
      - description: order id
        in: path
        name: id
        required: true
        type: string
      - description: order pay request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.OrderPayRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: payOrder
      tags:
      - order
  /api/order/{id}/payback:
    put:
      consumes:
      - application/json
      description: payback order by id
      parameters:
      - description: order id
        in: path
        name: id
        required: true
        type: string
      - description: order payback request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.OrderPayRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: paybackOrder
      tags:
      - order
  /api/order/{id}/revoke:
    put:
      consumes:
      - application/json
      description: revoke order by id
      parameters:
      - description: order id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: revokeOrder
      tags:
      - order
  /api/order/{id}/signup:
    put:
      consumes:
      - application/json
      description: signup order by id
      parameters:
      - description: order id
        in: path
        name: id
        required: true
        type: string
      - description: order signup request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.OrderPayRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: signupOrder
      tags:
      - order
  /api/order_source:
    post:
      consumes:
      - application/json
      description: create an order source
      parameters:
      - description: create order source
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.CreateOrderSourceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: createOrderSource
      tags:
      - orderSource
  /api/order_sources:
    get:
      consumes:
      - application/json
      description: list all order sources
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.OrderSource'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: listOrderSources
      tags:
      - orderSource
  /api/orders:
    get:
      consumes:
      - application/json
      description: search order with condition
      parameters:
      - description: search order with student_ids
        in: query
        name: student_ids
        type: string
      - description: search order with to_org_ids
        in: query
        name: to_org_ids
        type: string
      - description: search order with intent_subjects
        in: query
        name: intent_subjects
        type: string
      - description: search order with publisher_id
        in: query
        name: publisher_id
        type: integer
      - description: search order with status
        in: query
        name: status
        type: string
      - description: search order order by column name
        in: query
        name: order_by
        type: string
      - description: order list page size
        in: query
        name: page_size
        required: true
        type: integer
      - description: order list page index
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.OrderInfoList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: searchOrder
      tags:
      - order
  /api/orders/author:
    get:
      consumes:
      - application/json
      description: search order in author with condition
      parameters:
      - description: search order with student_ids
        in: query
        name: student_ids
        type: string
      - description: search order with to_org_ids
        in: query
        name: to_org_ids
        type: string
      - description: search order with intent_subjects
        in: query
        name: intent_subjects
        type: string
      - description: search order with status
        in: query
        name: status
        type: string
      - description: search order order by column name
        in: query
        name: order_by
        type: string
      - description: order list page size
        in: query
        name: page_size
        required: true
        type: integer
      - description: order list page index
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.OrderInfoList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: searchOrderWithAuthor
      tags:
      - order
  /api/orders/org:
    get:
      consumes:
      - application/json
      description: search order in org with condition
      parameters:
      - description: search order with student_ids
        in: query
        name: student_ids
        type: string
      - description: search order with intent_subjects
        in: query
        name: intent_subjects
        type: string
      - description: search order with status
        in: query
        name: status
        type: string
      - description: search order with publisher_id
        in: query
        name: publisher_id
        type: integer
      - description: search order order by column name
        in: query
        name: order_by
        type: string
      - description: order list page size
        in: query
        name: page_size
        required: true
        type: integer
      - description: order list page index
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.OrderInfoList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: searchOrderWithOrgID
      tags:
      - order
  /api/orders/pending:
    get:
      consumes:
      - application/json
      description: search pending order pay record with condition
      parameters:
      - description: search order pay record with pay_record_ids
        in: query
        name: pay_record_ids
        type: string
      - description: search order pay record with order_ids
        in: query
        name: order_ids
        type: string
      - description: search order pay record with author_ids
        in: query
        name: author_ids
        type: string
      - description: search order pay record with mode
        in: query
        name: mode
        type: integer
      - description: search order pay record with status
        in: query
        name: status
        type: string
      - description: search order pay record by column name
        in: query
        name: order_by
        type: string
      - description: order pay record list page size
        in: query
        name: page_size
        required: true
        type: integer
      - description: order pay record list page index
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.PayRecordInfoList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: searchPendingPayRecord
      tags:
      - order
  /api/org:
    post:
      consumes:
      - application/json
      description: create org
      parameters:
      - description: create org request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.CreateOrgWithSubOrgsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.IdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: createOrg
      tags:
      - organization
  /api/org/{id}:
    get:
      consumes:
      - application/json
      description: get org by id
      parameters:
      - description: org id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Org'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: getOrgById
      tags:
      - organization
  /api/org/{id}/review/approve:
    put:
      consumes:
      - application/json
      description: approve org
      parameters:
      - description: org id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: approveOrg
      tags:
      - organization
  /api/org/{id}/review/reject:
    put:
      consumes:
      - application/json
      description: reject org
      parameters:
      - description: org id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: rejectOrg
      tags:
      - organization
  /api/org/{id}/revoke:
    put:
      consumes:
      - application/json
      description: revoke org
      parameters:
      - description: org id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: revokeOrg
      tags:
      - organization
  /api/org/{id}/subjects:
    get:
      consumes:
      - application/json
      description: get org subjects by id
      parameters:
      - description: org id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.SubjectsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: getOrgSubjectsById
      tags:
      - organization
  /api/orgs:
    get:
      consumes:
      - application/json
      description: list all organizations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.OrgListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: listOrgs
      tags:
      - organization
  /api/orgs/campus:
    get:
      consumes:
      - application/json
      description: search sub organizations with condition
      parameters:
      - description: search organizations with subjects
        in: query
        name: subjects
        type: string
      - description: search organizations with address
        in: query
        name: address
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.OrgListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: searchSubOrgs
      tags:
      - organization
  /api/orgs/pending:
    get:
      consumes:
      - application/json
      description: list pending organizations to check
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.OrgListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: listPendingOrgs
      tags:
      - organization
  /api/payment/{id}/review/accept:
    put:
      consumes:
      - application/json
      description: accept payment by id
      parameters:
      - description: payment id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: acceptPayment
      tags:
      - order
  /api/payment/{id}/review/reject:
    put:
      consumes:
      - application/json
      description: reject payment by id
      parameters:
      - description: payment id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: rejectPayment
      tags:
      - order
  /api/role:
    post:
      consumes:
      - application/json
      description: create a new role
      parameters:
      - description: create role request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.IdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: createRole
      tags:
      - role
  /api/roles:
    get:
      consumes:
      - application/json
      description: list all roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Role'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: listRoles
      tags:
      - role
  /api/statistics/summary:
    get:
      consumes:
      - application/json
      description: get system data graph
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StatisticGraph'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: graph
      tags:
      - statistics
  /api/student:
    post:
      consumes:
      - application/json
      description: create a new student
      parameters:
      - description: create student request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.CreateStudentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.IdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: createStudent
      tags:
      - student
  /api/student/{id}:
    get:
      consumes:
      - application/json
      description: create a new student
      parameters:
      - description: student id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StudentInfosWithOrders'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: createStudent
      tags:
      - student
  /api/students/private:
    get:
      consumes:
      - application/json
      description: search students with condition
      parameters:
      - description: search student with name
        in: query
        name: name
        type: string
      - description: search student with telephone
        in: query
        name: telephone
        type: string
      - description: search student with address
        in: query
        name: address
        type: string
      - description: search student with author_id
        in: query
        name: author_id
        type: string
      - description: search student order by column name
        in: query
        name: order_by
        type: string
      - description: student list page size
        in: query
        name: page_size
        required: true
        type: integer
      - description: student list page index
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.StudentInfoList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: searchStudents
      tags:
      - student
  /api/subject:
    post:
      consumes:
      - application/json
      description: create a new subject
      parameters:
      - description: create subject request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.CreateSubjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.IdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: createSubject
      tags:
      - subject
  /api/subjects:
    get:
      consumes:
      - multipart/form-data
      description: list all roles
      parameters:
      - description: subject parent id
        in: path
        name: parent_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Subject'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: listRoles
      tags:
      - subject
  /api/upload/{partition}:
    post:
      consumes:
      - application/json
      description: upload a file
      parameters:
      - description: upload file partition
        in: path
        name: partition
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.IdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: uploadFile
      tags:
      - upload
  /api/user:
    post:
      consumes:
      - application/json
      description: create a new user
      parameters:
      - description: create user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.IdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: createUser
      tags:
      - user
  /api/user/authority:
    get:
      consumes:
      - application/json
      description: list user all authority
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Auth'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: listUserAuthority
      tags:
      - user
  /api/user/login:
    post:
      consumes:
      - application/json
      description: login system
      parameters:
      - description: user login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: login
      tags:
      - user
  /api/user/password:
    post:
      consumes:
      - application/json
      description: update user password
      parameters:
      - description: password to update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.UserUpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: updatePassword
      tags:
      - user
  /api/user/reset/{id}:
    post:
      consumes:
      - application/json
      description: reset user password
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: resetPassword
      tags:
      - user
  /api/users:
    get:
      consumes:
      - application/json
      description: list all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.UserInfo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.Response'
      summary: listUsers
      tags:
      - user
swagger: "2.0"
