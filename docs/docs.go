// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://localhost:8088/v1",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/auth": {
            "get": {
                "description": "list all authorization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "listAuth",
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/order": {
            "post": {
                "description": "create an order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "createOrder",
                "parameters": [
                    {
                        "description": "create request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CreateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.IdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/order/{id}": {
            "get": {
                "description": "get order by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "getOrderByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.OrderInfoWithRecords"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/order/{id}/mark": {
            "post": {
                "description": "add mark to order by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "addOrderMark",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "create mark",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.OrderMarkRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/order/{id}/pay": {
            "put": {
                "description": "pay order by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "payOrder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "order pay request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.OrderPayRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/order/{id}/payback": {
            "put": {
                "description": "payback order by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "paybackOrder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "order payback request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.OrderPayRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/order/{id}/revoke": {
            "put": {
                "description": "revoke order by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "revokeOrder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/order/{id}/signup": {
            "put": {
                "description": "signup order by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "signupOrder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "order signup request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.OrderPayRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/order_source": {
            "post": {
                "description": "create an order source",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orderSource"
                ],
                "summary": "createOrderSource",
                "parameters": [
                    {
                        "description": "create order source",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CreateOrderSourceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/order_sources": {
            "get": {
                "description": "list all order sources",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orderSource"
                ],
                "summary": "listOrderSources",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.OrderSource"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/orders": {
            "get": {
                "description": "search order with condition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "searchOrder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search order with student_ids",
                        "name": "student_ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search order with to_org_ids",
                        "name": "to_org_ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search order with intent_subjects",
                        "name": "intent_subjects",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "search order with publisher_id",
                        "name": "publisher_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search order with status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search order order by column name",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "order list page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "order list page index",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.OrderInfoList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/orders/author": {
            "get": {
                "description": "search order in author with condition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "searchOrderWithAuthor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search order with student_ids",
                        "name": "student_ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search order with to_org_ids",
                        "name": "to_org_ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search order with intent_subjects",
                        "name": "intent_subjects",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search order with status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search order order by column name",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "order list page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "order list page index",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.OrderInfoList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/orders/org": {
            "get": {
                "description": "search order in org with condition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "searchOrderWithOrgID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search order with student_ids",
                        "name": "student_ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search order with intent_subjects",
                        "name": "intent_subjects",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search order with status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "search order with publisher_id",
                        "name": "publisher_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search order order by column name",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "order list page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "order list page index",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.OrderInfoList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/orders/pending": {
            "get": {
                "description": "search pending order pay record with condition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "searchPendingPayRecord",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search order pay record with pay_record_ids",
                        "name": "pay_record_ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search order pay record with order_ids",
                        "name": "order_ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search order pay record with author_ids",
                        "name": "author_ids",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "search order pay record with mode",
                        "name": "mode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search order pay record with status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search order pay record by column name",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "order pay record list page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "order pay record list page index",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.PayRecordInfoList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/org": {
            "post": {
                "description": "create org",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "createOrg",
                "parameters": [
                    {
                        "description": "create org request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CreateOrgWithSubOrgsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.IdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/org/{id}": {
            "get": {
                "description": "get org by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "getOrgById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "org id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Org"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/org/{id}/review/approve": {
            "put": {
                "description": "approve org",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "approveOrg",
                "parameters": [
                    {
                        "type": "string",
                        "description": "org id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/org/{id}/review/reject": {
            "put": {
                "description": "reject org",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "rejectOrg",
                "parameters": [
                    {
                        "type": "string",
                        "description": "org id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/org/{id}/revoke": {
            "put": {
                "description": "revoke org",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "revokeOrg",
                "parameters": [
                    {
                        "type": "string",
                        "description": "org id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/org/{id}/subjects": {
            "get": {
                "description": "get org subjects by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "getOrgSubjectsById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "org id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.SubjectsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/orgs": {
            "get": {
                "description": "list all organizations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "listOrgs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.OrgListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/orgs/campus": {
            "get": {
                "description": "search sub organizations with condition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "searchSubOrgs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search organizations with subjects",
                        "name": "subjects",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search organizations with address",
                        "name": "address",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.OrgListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/orgs/pending": {
            "get": {
                "description": "list pending organizations to check",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "listPendingOrgs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.OrgListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/payment/{id}/review/accept": {
            "put": {
                "description": "accept payment by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "acceptPayment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "payment id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/payment/{id}/review/reject": {
            "put": {
                "description": "reject payment by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "rejectPayment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "payment id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/role": {
            "post": {
                "description": "create a new role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "createRole",
                "parameters": [
                    {
                        "description": "create role request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CreateRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.IdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/roles": {
            "get": {
                "description": "list all roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "listRoles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Role"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/statistics/summary": {
            "get": {
                "description": "get system data graph",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "graph",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.StatisticGraph"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/student": {
            "post": {
                "description": "create a new student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "createStudent",
                "parameters": [
                    {
                        "description": "create student request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CreateStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.IdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/student/{id}": {
            "get": {
                "description": "create a new student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "createStudent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "student id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.StudentInfosWithOrders"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/students/private": {
            "get": {
                "description": "search students with condition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "searchStudents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search student with name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search student with telephone",
                        "name": "telephone",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search student with address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search student with author_id",
                        "name": "author_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search student order by column name",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "student list page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "student list page index",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.StudentInfoList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/subject": {
            "post": {
                "description": "create a new subject",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subject"
                ],
                "summary": "createSubject",
                "parameters": [
                    {
                        "description": "create subject request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CreateSubjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.IdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/subjects": {
            "get": {
                "description": "list all roles",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subject"
                ],
                "summary": "listRoles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "subject parent id",
                        "name": "parent_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Subject"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/upload/{partition}": {
            "post": {
                "description": "upload a file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "upload"
                ],
                "summary": "uploadFile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "upload file partition",
                        "name": "partition",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.IdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/user": {
            "post": {
                "description": "create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "createUser",
                "parameters": [
                    {
                        "description": "create user request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.IdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/user/authority": {
            "get": {
                "description": "list user all authority",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "listUserAuthority",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Auth"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "description": "login system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "login",
                "parameters": [
                    {
                        "description": "user login request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/user/password": {
            "post": {
                "description": "update user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "updatePassword",
                "parameters": [
                    {
                        "description": "password to update",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UserUpdatePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/user/reset/{id}": {
            "post": {
                "description": "reset user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "resetPassword",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "description": "list all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "listUsers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.UserInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/route.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Auth": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.CreateOrderRequest": {
            "type": "object",
            "properties": {
                "intent_subjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "student_id": {
                    "type": "integer"
                },
                "to_org_id": {
                    "type": "integer"
                }
            }
        },
        "entity.CreateOrderSourceRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.CreateOrgRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "subjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "telephone": {
                    "type": "string"
                }
            }
        },
        "entity.CreateOrgWithSubOrgsRequest": {
            "type": "object",
            "properties": {
                "org": {
                    "$ref": "#/definitions/entity.CreateOrgRequest"
                },
                "sub_orgs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.CreateOrgRequest"
                    }
                }
            }
        },
        "entity.CreateRoleRequest": {
            "type": "object",
            "properties": {
                "auth_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.CreateStudentRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "intent_subject": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "order_source_id": {
                    "type": "integer"
                },
                "telephone": {
                    "type": "string"
                }
            }
        },
        "entity.CreateSubjectRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "integer"
                }
            }
        },
        "entity.CreateUserRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "org_id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "entity.OrderInfoDetails": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "intent_subject": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "org_name": {
                    "type": "string"
                },
                "publisher_id": {
                    "type": "integer"
                },
                "publisher_name": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "student_id": {
                    "type": "integer"
                },
                "student_name": {
                    "type": "string"
                },
                "student_telephone": {
                    "type": "string"
                },
                "to_org_id": {
                    "type": "integer"
                }
            }
        },
        "entity.OrderInfoList": {
            "type": "object",
            "properties": {
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.OrderInfoDetails"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "entity.OrderInfoWithRecords": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "intent_subject": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "org_name": {
                    "type": "string"
                },
                "paymentInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.OrderPayRecord"
                    }
                },
                "publisher_id": {
                    "type": "integer"
                },
                "publisher_name": {
                    "type": "string"
                },
                "remarkInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.OrderRemarkRecord"
                    }
                },
                "status": {
                    "type": "integer"
                },
                "student_id": {
                    "type": "integer"
                },
                "student_summary": {
                    "$ref": "#/definitions/entity.StudentSummaryInfo"
                },
                "to_org_id": {
                    "type": "integer"
                }
            }
        },
        "entity.OrderMarkRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "order_id": {
                    "type": "integer"
                }
            }
        },
        "entity.OrderPayRecord": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mode": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.OrderPayRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "entity.OrderRemarkRecord": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mode": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.OrderSource": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.Org": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "sub_orgs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Org"
                    }
                },
                "subjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "telephone": {
                    "type": "string"
                }
            }
        },
        "entity.PayRecordInfo": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "intent_subject": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mode": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                },
                "org_name": {
                    "type": "string"
                },
                "publisher_id": {
                    "type": "integer"
                },
                "publisher_name": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "student_id": {
                    "type": "integer"
                },
                "student_name": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "to_org_id": {
                    "type": "integer"
                }
            }
        },
        "entity.PayRecordInfoList": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.PayRecordInfo"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "entity.Role": {
            "type": "object",
            "properties": {
                "auth_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Auth"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.StatisticGraph": {
            "type": "object",
            "properties": {
                "performances_graph": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.StatisticRecord"
                    }
                },
                "students_graph": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.StatisticRecord"
                    }
                }
            }
        },
        "entity.StatisticRecord": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "month": {
                    "type": "integer"
                },
                "value": {
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "entity.StudentInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "authorID": {
                    "type": "integer"
                },
                "authorName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "intent_subject": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "order_source_id": {
                    "type": "integer"
                },
                "order_source_name": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "telephone": {
                    "type": "string"
                }
            }
        },
        "entity.StudentInfoList": {
            "type": "object",
            "properties": {
                "students": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.StudentInfo"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "entity.StudentInfosWithOrders": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "authorID": {
                    "type": "integer"
                },
                "authorName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "intent_subject": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "order_source_id": {
                    "type": "integer"
                },
                "order_source_name": {
                    "type": "string"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.OrderInfoDetails"
                    }
                },
                "status": {
                    "type": "integer"
                },
                "telephone": {
                    "type": "string"
                }
            }
        },
        "entity.StudentSummaryInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "telephone": {
                    "type": "string"
                }
            }
        },
        "entity.Subject": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "$ref": "#/definitions/entity.Subject"
                },
                "parent_id": {
                    "type": "integer"
                }
            }
        },
        "entity.SummaryInfo": {
            "type": "object",
            "properties": {
                "orgs_total": {
                    "type": "integer"
                },
                "performance_total": {
                    "type": "integer"
                },
                "students_total": {
                    "type": "integer"
                },
                "success_rate": {
                    "type": "integer"
                }
            }
        },
        "entity.UserInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "org_id": {
                    "type": "integer"
                },
                "org_name": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer"
                },
                "role_name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "entity.UserLoginRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "entity.UserLoginResponse": {
            "type": "object",
            "properties": {
                "auths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Auth"
                    }
                },
                "org_id": {
                    "type": "integer"
                },
                "org_name": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer"
                },
                "role_name": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "entity.UserUpdatePasswordRequest": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string"
                }
            }
        },
        "route.IdResponse": {
            "type": "object",
            "properties": {
                "err_msg": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "route.OrgListResponse": {
            "type": "object",
            "properties": {
                "orgs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Org"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "route.Response": {
            "type": "object",
            "properties": {
                "err_msg": {
                    "type": "string"
                }
            }
        },
        "route.SubjectsResponse": {
            "type": "object",
            "properties": {
                "err_msg": {
                    "type": "string"
                },
                "subjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "0.1 alpha",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "xg REST API",
	Description: "xg backend rest api",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
